name: Generate OpenAPI Angular Client

on:
  workflow_call:
    inputs:
      publish:
        description: If true, publishes to Github NPM package repository
        type: boolean
        default: true
        required: false
      package_name:
        description: >
          Overarching Python package name (snake_case).  Contains the model
          package and (potentially) controllers, test code, etc.
        type: string
        required: true
      model_package:
        description: Angular package name (snake_case) for the domain model
        type: string
        required: true
      project_version:
        description: The version to be pushed to Github's NPM package manager, if applicable
        type: string
        required: false
    secrets:
      actor_token:
        description: |
          GITHUB_TOKEN or PAT authorized to make changes to the repository
        required: true

env:
  TYPESCRIPT_GEN_DIR: typescript-angular-client

jobs:

  generate-angular-client:
    runs-on: ubuntu-latest
    name: Generate OpenAPI TypeScript client
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate OpenAPI TypeScript Client
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: typescript-angular
          openapi-file: openapi.yaml
          command-args: >-
            --model-package ${{ inputs.model_package }}
            --package-name ${{ inputs.package_name }}

      - name: Generate NPM package configuration
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: .package.json.j2
          output_file: ${{ env.TYPESCRIPT_GEN_DIR }}/package.json
          strict: true
          variables: |
            project_version=${{ inputs.project_version }}

      - name: Generate NPM authentication file
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: .npmrc.j2
          output_file: ${{ env.TYPESCRIPT_GEN_DIR }}/.npmrc
          strict: true
          variables: |
            github_token=${{ secrets.actor_token }}

      - name: Publish package
        if: inputs.publish
        run: npm publish
        working-directory: ${{ env.TYPESCRIPT_GEN_DIR }}
