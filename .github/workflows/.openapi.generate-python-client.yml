name: Generate OpenAPI Python client

on:
  workflow_call:
    inputs:
      publish:
        description: If true, publishes to PyPI package repository
        type: boolean
        default: true
        required: false
      package_name:
        description: >
          Overarching Python package name (snake_case).  Contains the model
          package and (potentially) controllers, test code, etc.
        type: string
        required: true
      model_package:
        description: Python package name (snake_case) for the domain model
        type: string
        required: true
    secrets:
      actor_token:
        description: |
          GITHUB_TOKEN or PAT authorized to make changes to the repository
        required: true

env:
  PYTHON_CLIENT_GEN_DIR: python-aiohttp-client

jobs:

  generate-python-client:
    runs-on: ubuntu-latest
    name: Generate OpenAPI Python  client
    permissions:
      id-token: write
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate OpenAPI Python Client
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: python-aiohttp
          openapi-file: openapi.yaml
          command-args: >-
            --model-package ${{ inputs.model_package }}
            --package-name ${{ inputs.package_name }}

      - name: Generate PyPi package configuration
        uses: cuchi/jinja2-action@v1.2.0
        with:
          template: .pyproject.toml.j2
          output_file: ${{ env.PYTHON_CLIENT_GEN_DIR }}/pyproject.toml
          strict: true
          variables: |
            project_version=${{ needs.prerequisites.outputs.tag }}

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.4.2'

      - name: Build python wheel
        run: poetry build
        working-directory: ${{ env.PYTHON_CLIENT_GEN_DIR }}

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: inputs.publish
        with:
          packages-dir: ${{ env.PYTHON_CLIENT_GEN_DIR }}/dist
