openapi: 3.0.3
info:
    title: Boids API
    version: 0.1.0
    description: API for the Boids application

servers:
    - url: http://boids-gateway.boids:8888/api/v1
      description: Development server

paths:
    /session:
        get:
            description: Retrieve the list of Boids sessions
            parameters:
                - $ref: "#/components/parameters/title_query"
                - $ref: "#/components/parameters/state_query"
                - $ref: "#/components/parameters/uuid_query"
                - $ref: "#/components/parameters/order_by_query"
                - $ref: "#/components/parameters/offset_query"
                - $ref: "#/components/parameters/limit_query"
            responses:
                200:
                    $ref: "#/components/responses/session_list"
            tags:
                - Sessions
        post:
            description: >
                Create a Boids session.

                Required fields: title
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SessionConfiguration"
            responses:
                201:
                    $ref: "#/components/responses/session"
                default:
                    $ref: "#/components/responses/default"
            tags:
                - Sessions
    /session/{uuid}:
        get:
            description: Retrieve the specified session
            responses:
                200:
                    $ref: "#/components/responses/session"

                default:
                    $ref: "#/components/responses/default"
            tags:
                - Sessions
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SessionConfiguration"
            responses:
                200:
                    $ref: "#/components/responses/session"
                default:
                    $ref: "#/components/responses/default"
            tags:
                - Sessions
        delete:
            responses:
                200:
                    description: The Session was successfully deleted
                default:
                    $ref: "#/components/responses/default"
            tags:
                - Sessions
        parameters:
          - $ref: "#/components/parameters/uuid_path"

    /session/{uuid}/boid:
        get:
            description: Return the list of Boids
            tags:
                - Sessions
                - Boids
            parameters:
                - $ref: "#/components/parameters/order_by_query"
                - $ref: "#/components/parameters/offset_query"
                - $ref: "#/components/parameters/limit_query"
            responses:
                200:
                    $ref: "#/components/responses/boid_list"
        post:
            description: >
                Create a Boid.  The 'id' and 'timestamp' fields must not be present.
                The newly created Boid is assigned an ID by the simulation.
            tags:
                - Sessions
                - Boids
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Boid"
            responses:
                200:
                    $ref: "#/components/responses/boid"
                default:
                    description: One or more Boid was not created.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorModel"
        parameters:
          - $ref: "#/components/parameters/uuid_path"

    /session/{session_uuid}/boid/{boid_uuid}:
        get:
            tags:
                - Sessions
                - Boids
            responses:
                200:
                    $ref: "#/components/responses/boid"
                default:
                    $ref: "#/components/responses/default"

        delete:
            tags:
                - Sessions
                - Boids
            responses:
                204:
                    description: The specified Boid was deleted.
                404:
                    description: Not found - the specified Boid could not be found.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorModel"
        parameters:
          - name: session_uuid
            in: path
            required: true
            schema:
                $ref: "#/components/schemas/UUID"
          - name: boid_uuid
            in: path
            required: true
            schema:
                $ref: "#/components/schemas/UUID"

    /session/{uuid}/event:
        get:
            description: Retrieve system events in reverse time order (most recent first)
            parameters:
                - $ref: "#/components/parameters/order_by_query"
                - $ref: "#/components/parameters/offset_query"
                - $ref: "#/components/parameters/limit_query"
            responses:
                200:
                    $ref: "#/components/responses/system_event_list"
            tags:
                - Events
        parameters:
          - name: uuid
            in: path
            required: true
            schema:
                $ref: "#/components/schemas/UUID"

    /pubsub/sessions:
        get:
            responses:
              default:
                description: Stream of SessionConfiguration updates
                content:
                  application/json:
                    schema:
                        $ref: "#/components/schemas/SessionConfigurationStatus"
            tags:
                - Pub/sub Topics

    /pubsub/boids.boids:
        get:
            responses:
                default:
                    description: Foo
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BoidTelemetryEvent"
            tags:
                - Pub/sub Topics
    /pubsub/boids.system-time:
        get:
            responses:
              default:
                description: Stream of system time updates
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/SessionTimestamp"
            tags:
                - Pub/sub Topics
    /pubsub/boids.system-events:
        get:
            responses:
                default:
                    description: Foo
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SystemEvent"
            tags:
                - Pub/sub Topics

components:
    parameters:
        uuid_path:
            name: uuid
            in: path
            required: true
            schema:
                $ref: "#/components/schemas/UUID"

        uuid_query:
            name: uuid
            in: query
            schema:
                $ref: "#/components/schemas/UUID"

        title_query:
            description: Filter SessionConfigurations by title.
            name: title
            in: query
            schema:
                type: string

        state_query:
            description: Filter SessionConfigurations by state.
            name: state
            in: query
            schema:
                type: string

        order_by_query:
            description: >
                Field name to sort by.  Defaults to ascending. For descending,
                prepend a '-' minus.  Examples: 'title' (sorts by title ascending),
                '-title' sorts by title descending)
            name: order_by
            in: query
            schema:
                type: string

        offset_query:
            description: Pagination offset (0-based)
            name: offset
            in: query
            schema:
                type: integer
                minimum: 0
                default: 0

        limit_query:
            name: limit
            description: Pagination size
            in: query
            schema:
                type: integer
                minimum: 10
                maximum: 500
                default: 20

    schemas:
        UUID:
            type: string
            format: uuid

        URL:
            type: string
            format: uri

        Pagination:
            type: object
            properties:
                order_by:
                    type: string
                offset:
                    type: integer
                limit:
                    type: integer
                total:
                    type: integer
            required:
                - order_by
                - offset
                - limit
                - total

        SpeedRange:
            type: object
            properties:
                min:
                    type: integer
                    default: 1
                max:
                    type: integer
                    default: 100
            required:
                - min
                - max

        SessionState:
            type: string
            enum:
                - PENDING
                - PAUSED
                - RESET
                - RUNNING
                - STEP
                - TERMINATED
                - ARCHIVED

        WorldConfiguration:
            type: object
            properties:
                width:
                    type: integer
                    format: int64
                    default: 500
                height:
                    type: integer
                    format: int64
                    default: 500
            required:
                - width
                - height

        BehaviorConfiguration:
            type: object
            properties:
                avoid_walls:
                    type: boolean
                    default: true
                normalize_velocity:
                    type: boolean
                    default: true
                view_range:
                    type: integer
                    format: int64
                view_angle:
                    type: integer
                    format: int64
                    minimum: 0
                    maximum: 359
                speed_limits:
                    $ref: "#/components/schemas/SpeedRange"

        SessionConfiguration:
            type: object
            description: >
                Creates or updates a SessionConfiguration.
            properties:
                title:
                    type: string
                    description: Session title
                num_boids:
                    type: integer
                    format: int64
                state:
                    $ref: "#/components/schemas/SessionState"
                world:
                    $ref: "#/components/schemas/WorldConfiguration"
                behavior:
                    $ref: "#/components/schemas/BehaviorConfiguration"

        SessionConfigurationStatus:
            type: object
            allOf:
              - $ref: "#/components/schemas/SessionConfiguration"
              - type: object
                properties:
                    uuid:
                        $ref: "#/components/schemas/UUID"
                    url:
                        $ref: "#/components/schemas/URL"
                    next_states:
                        type: array
                        items:
                            $ref: "#/components/schemas/SessionState"
                    created:
                        type: string
                    modified:
                        type: string
                required:
                  - uuid
                  - url
                  - state
                  - next_states

        SessionConfigurationStatusList:
            type: object
            description: List of Boids sessions, possibly paginated
            properties:
                values:
                    type: array
                    items:
                        $ref: "#/components/schemas/SessionConfigurationStatus"
                pagination:
                    $ref: "#/components/schemas/Pagination"
            required:
                - values
                - pagination

        CartesianTriple:
            type: object
            properties:
                x:
                    type: number
                    format: double
                y:
                    type: number
                    format: double
                z:
                    type: number
                    format: double
            required:
                - x
                - y

        SessionTimestamp:
            type: object
            description: >
                Identifies a unique point in time for a simulation.
                At tick 0, no movement has been initiated.
            properties:
                tick:
                    type: integer
                    format: int64
                elapsed_time:
                    type: string
                    pattern: "\\d{1,}:[0-5]\\d:[0-5]\\d\\.\\d{3}"
                delta_time:
                    type: number
                    format: float
            required:
                - tick
                - elapsed_time


        Boid:
            type: object
            description: >
                Describes a Boid.
            properties:
                uuid:
                    $ref: "#/components/schemas/UUID"
                position:
                    $ref: "#/components/schemas/CartesianTriple"
                velocity:
                    $ref: "#/components/schemas/CartesianTriple"
                url:
                    $ref: "#/components/schemas/URL"
            required:
                - position
                - velocity

        BoidList:
            type: object
            description: List of Boids, possibly paginated
            properties:
                values:
                    type: array
                    items:
                        $ref: "#/components/schemas/Boid"
                pagination:
                    $ref: "#/components/schemas/Pagination"
            required:
                - values

        SystemEventLevel:
            type: string
            enum:
                - ERROR
                - WARNING
                - INFO
                - STATUS
                - TELEMETRY

        SystemEvent:
            type: object
            description: >
                Describes an occurance within the simulation
            discriminator:
              propertyName: event_type
            properties:
                timestamp:
                    $ref: "#/components/schemas/SessionTimestamp"
                level:
                    $ref: "#/components/schemas/SystemEventLevel"
                event_type:
                    type: string
            required:
                - timestamp
                - level
                - event_type

        SystemMessageEvent:
            type: object
            allOf:
              - $ref: "#/components/schemas/SystemEvent"
              - type: object
                properties:
                    source:
                        type: string
                    message:
                        type: string
                required:
                  - source
                  - message

        BoidTelemetryEvent:
            type: object
            allOf:
              - $ref: "#/components/schemas/SystemEvent"
              - type: object
                properties:
                    id:
                        type: string
                    position:
                        $ref: "#/components/schemas/CartesianTriple"
                    velocity:
                        $ref: "#/components/schemas/CartesianTriple"
                required:
                  - id
                  - position
                  - velocity

        SystemEventList:
            type: object
            description: List of System Events, possibly paginated
            properties:
                values:
                    type: array
                    items:
                        $ref: "#/components/schemas/SystemEvent"
                pagination:
                    $ref: "#/components/schemas/Pagination"
            required:
                - values

        ErrorModel:
            type: object
            required:
                - message
                - code
            properties:
                message:
                    type: string
                code:
                    type: integer
                    minimum: 100
                    maximum: 600

    responses:
        session:
            description: Returns the Session
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/SessionConfigurationStatus"
        session_list:
            description: Returns 0..n Sessions
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/SessionConfigurationStatusList"
        uuid:
            description: Returns a UUID
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/UUID"
        boid:
            description: Returns the Boid
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Boid"
        boid_list:
            description: Return a list of Boid objects
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/BoidList"
        system_event_list:
            description: Return a list of system events
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            $ref: "#/components/schemas/SystemEventList"

        default:
            description: >
                Describes an error condition.
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/ErrorModel"
